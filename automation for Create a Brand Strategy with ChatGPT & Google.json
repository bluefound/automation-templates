{
    "name": "Create a Brand Strategy with ChatGPT and Google Docs",
    "flow": [
        {
            "id": 28,
            "module": "util:SetVariables",
            "version": 1,
            "parameters": {},
            "mapper": {
                "scope": "roundtrip",
                "variables": [
                    {
                        "name": "Brand Name",
                        "value": ""
                    },
                    {
                        "name": "Brand Information",
                        "value": ""
                    }
                ]
            },
            "metadata": {
                "designer": {
                    "x": 0,
                    "y": 0,
                    "name": "Brand information"
                },
                "restore": {
                    "expect": {
                        "scope": {
                            "label": "One cycle"
                        },
                        "variables": {
                            "items": [
                                null,
                                null
                            ]
                        }
                    }
                },
                "expect": [
                    {
                        "name": "variables",
                        "spec": [
                            {
                                "name": "name",
                                "type": "text",
                                "label": "Variable name",
                                "required": true
                            },
                            {
                                "name": "value",
                                "type": "any",
                                "label": "Variable value"
                            }
                        ],
                        "type": "array",
                        "label": "Variables"
                    },
                    {
                        "name": "scope",
                        "type": "select",
                        "label": "Variable lifetime",
                        "required": true,
                        "validate": {
                            "enum": [
                                "roundtrip",
                                "execution"
                            ]
                        }
                    }
                ],
                "interface": [
                    {
                        "name": "Brand Name",
                        "type": "any",
                        "label": "Brand Name"
                    },
                    {
                        "name": "Brand Information",
                        "type": "any",
                        "label": "Brand Information"
                    }
                ]
            }
        },
        {
            "id": 5,
            "module": "openai-gpt-3:CreateCompletion",
            "version": 1,
            "parameters": {},
            "mapper": {
                "model": "gpt-4-0125-preview",
                "top_p": "1",
                "select": "chat",
                "messages": [
                    {
                        "role": "user",
                        "content": "Brand Name: {{28.`Brand Name`}}\nBrand info: {{28.`Brand Information`}}\n\nYou are a brand strategist skilled at defining a brand's vision and long-term goals. Your brand vision should answer these important questions:\n\nHow do you envision positively shaping the future through your work?  \n\nWhat type of positive change do you aim to make through your brand or organization?\n\nWhat is the long-term purpose or difference you strive to make with your brand?\n\nWhat guiding principles or objectives do you follow to achieve your ideal vision for your brand?\n\nPlease keep your response to each answer concise - maximum of 3 sentences to enhance its clarity and memorability.\nPlease leave a line after each answer but do not rewrite the questions.\n\nTitle it: Brand Vision \nDo not include any characters before the title.\nDo not make assumptions.\n\nOnce you have completed the above, create a brand vision statement of 15-20 words incorporating your response and use the following guidelines:\n\n- Length: Keep it concise, typically no more than 1-2 sentences. A brand vision should be easily digestible and memorable.\n\n- Focus: Clearly articulate your brand's purpose and focus on the impact/outcome you seek to achieve for customers/stakeholders rather than internal capabilities or attributes.\n\n- Inspiring: Craft the vision in an inspiring way that engages employees, partners and customers in the brand's purpose. Use emotionally compelling language.\n\n- Timeless: The vision should remain relevant for 5-10+ years and guide long-term decision making, so avoid being too tied to current trends or initiatives.\n\n- Differentiating: Communicate what uniquely different or transformational impact your brand will have versus competitors to attract stakeholders.\n\n- Promotes values: Incorporate the core values that define your brand in terms of how you will treat people and make a difference.\n\n- Measurable: Leaders should be able to track progress towards goals implied in the vision through tangible metrics over time.\n\n- Authentic: Make sure the vision authentically reflects your brand rather than sounding generic. It must seem true to who you are.\n\nTitle this: *Brand Vision Statement* and output the text in Italics.\n\nMake it sound human-like, not complicated and easy for the average reader to read."
                    }
                ],
                "max_tokens": "1000",
                "temperature": "0.7",
                "n_completions": "1",
                "response_format": "text"
            },
            "metadata": {
                "designer": {
                    "x": 300,
                    "y": 0,
                    "name": "Brand Vision"
                },
                "restore": {
                    "expect": {
                        "stop": {
                            "mode": "chose"
                        },
                        "model": {
                            "mode": "chose",
                            "label": "gpt-4-0125-preview (system)"
                        },
                        "select": {
                            "label": "Create a Chat Completion (GPT Models)"
                        },
                        "messages": {
                            "mode": "chose",
                            "items": [
                                {
                                    "role": {
                                        "mode": "chose",
                                        "label": "User"
                                    }
                                }
                            ]
                        },
                        "logit_bias": {
                            "mode": "chose"
                        },
                        "response_format": {
                            "mode": "chose",
                            "label": "Text"
                        },
                        "additionalParameters": {
                            "mode": "chose"
                        }
                    },
                    "parameters": {
                        "__IMTCONN__": {
                            "data": {
                                "scoped": "true",
                                "connection": "openai-gpt-3"
                            },
                            "label": "Make Ent GPT4"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:openai-gpt-3",
                        "label": "Connection"
                    }
                ],
                "expect": [
                    {
                        "name": "select",
                        "type": "select",
                        "label": "Select Method",
                        "required": true,
                        "validate": {
                            "enum": [
                                "chat",
                                "prompt"
                            ]
                        }
                    },
                    {
                        "name": "max_tokens",
                        "type": "number",
                        "label": "Max Tokens",
                        "required": true
                    },
                    {
                        "name": "temperature",
                        "type": "number",
                        "label": "Temperature",
                        "validate": {
                            "max": 2,
                            "min": 0
                        }
                    },
                    {
                        "name": "top_p",
                        "type": "number",
                        "label": "Top P",
                        "validate": {
                            "max": 1,
                            "min": 0
                        }
                    },
                    {
                        "name": "n_completions",
                        "type": "number",
                        "label": "Number"
                    },
                    {
                        "name": "frequency_penalty",
                        "type": "number",
                        "label": "Frequency Penalty",
                        "validate": {
                            "max": 2,
                            "min": -2
                        }
                    },
                    {
                        "name": "presence_penalty",
                        "type": "number",
                        "label": "Presence Penalty",
                        "validate": {
                            "max": 2,
                            "min": -2
                        }
                    },
                    {
                        "name": "logit_bias",
                        "spec": {
                            "name": "value",
                            "spec": [
                                {
                                    "name": "token",
                                    "type": "text",
                                    "label": "Token ID",
                                    "required": true
                                },
                                {
                                    "name": "probability",
                                    "type": "number",
                                    "label": "Probability",
                                    "required": true,
                                    "validate": {
                                        "max": 100,
                                        "min": -100
                                    }
                                }
                            ],
                            "type": "collection",
                            "label": "Token Probability"
                        },
                        "type": "array",
                        "label": "Token Probability"
                    },
                    {
                        "name": "response_format",
                        "type": "select",
                        "label": "Response Format",
                        "validate": {
                            "enum": [
                                "text",
                                "json_object"
                            ]
                        }
                    },
                    {
                        "name": "seed",
                        "type": "integer",
                        "label": "Seed"
                    },
                    {
                        "name": "stop",
                        "spec": {
                            "name": "value",
                            "type": "text",
                            "label": "Stop Sequence"
                        },
                        "type": "array",
                        "label": "Stop Sequences",
                        "validate": {
                            "maxItems": 4
                        }
                    },
                    {
                        "name": "additionalParameters",
                        "spec": {
                            "name": "value",
                            "spec": [
                                {
                                    "name": "key",
                                    "type": "text",
                                    "label": "Parameter Name",
                                    "required": true
                                },
                                {
                                    "name": "type",
                                    "type": "select",
                                    "label": "Input Type",
                                    "options": [
                                        {
                                            "label": "Text",
                                            "value": "text",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "text",
                                                    "label": "Parameter Value"
                                                }
                                            ],
                                            "default": true
                                        },
                                        {
                                            "label": "Number",
                                            "value": "number",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "number",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Boolean",
                                            "value": "boolean",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "boolean",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Date",
                                            "value": "date",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "date",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Any",
                                            "value": "any",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "any",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "type": "collection",
                            "label": "Input Parameter"
                        },
                        "type": "array",
                        "label": "Other Input Parameters"
                    },
                    {
                        "name": "model",
                        "type": "select",
                        "label": "Model",
                        "required": true
                    },
                    {
                        "name": "messages",
                        "spec": {
                            "name": "value",
                            "spec": [
                                {
                                    "name": "role",
                                    "type": "select",
                                    "label": "Role",
                                    "options": [
                                        {
                                            "label": "System",
                                            "value": "system"
                                        },
                                        {
                                            "label": "User",
                                            "value": "user"
                                        },
                                        {
                                            "label": "Assistant",
                                            "value": "assistant"
                                        }
                                    ],
                                    "required": true
                                },
                                {
                                    "name": "content",
                                    "type": "text",
                                    "label": "Message Content"
                                }
                            ],
                            "type": "collection",
                            "label": "Message"
                        },
                        "type": "array",
                        "label": "Messages",
                        "required": true
                    }
                ],
                "advanced": true
            }
        },
        {
            "id": 9,
            "module": "openai-gpt-3:CreateCompletion",
            "version": 1,
            "parameters": {},
            "mapper": {
                "model": "{{5.model}}",
                "top_p": "1",
                "select": "chat",
                "messages": [
                    {
                        "role": "user",
                        "content": "Brand Name: {{28.`Brand Name`}}\nBrand info: {{28.`Brand Information`}}\n\nYou are a brand strategist skilled at defining a brand's mission and long-term goals. Your brand mission should answer these important questions:\n\n- What core purpose or mission does your company strive to fulfill?\n\n- In what ways does your business aim to benefit the people it serves? \n\n- What key advantages or strengths separate your offer from others in your industry?\n\n- What specific benefit, feature or need does your brand satisfy that others do not?\n\nPlease keep your response to each answer concise - maximum of 3 sentences to enhance its clarity and memorability.\nPlease leave a line after each answer but do not rewrite the questions.\n\nTitle it: Brand Mission\nDo not include any characters before the title.\nDo not make assumptions.\n\nOnce you have completed the above, create a brand mission statement incorporating your response and use the following guidelines:\n\n- Keep it concise - A mission statement should typically be 1-2 sentences, or roughly 1-2 lines of text. It needs to be easily digestible and memorizable.\n\n- Aim for 25-50 words as the sweet spot. Longer than 50 words and it may become unwieldy or lose its impact.\n\n- Use simple, clear language that is accessible to all internal/external audiences. Jargon and complex terms should be avoided.\n\n- Focus on your why - Clearly communicate your purpose, values and overall vision in a succinct yet inspiring way. - Emphasize benefits\n\n- Highlight the key benefits and value you provide customers through your products/services.\n\n- Be memorable - Strive for a mission that is easily remembered and can be clearly communicated by all employees.\n\n- Allow for flexibility - While concise, leave some flexibility and room for the mission to evolve over time as the market changes.\n\nTitle this: *Brand Mission Statement* and output the text in Italics.\n\nMake it sound human-like, not complicated and easy for the average reader to read."
                    }
                ],
                "max_tokens": "1000",
                "temperature": "0.7",
                "n_completions": "1",
                "response_format": "text"
            },
            "metadata": {
                "designer": {
                    "x": 600,
                    "y": 0,
                    "name": "Brand Mission"
                },
                "restore": {
                    "expect": {
                        "stop": {
                            "mode": "chose"
                        },
                        "model": {
                            "mode": "edit"
                        },
                        "select": {
                            "label": "Create a Chat Completion (GPT Models)"
                        },
                        "messages": {
                            "mode": "chose",
                            "items": [
                                {
                                    "role": {
                                        "mode": "chose",
                                        "label": "User"
                                    }
                                }
                            ]
                        },
                        "logit_bias": {
                            "mode": "chose"
                        },
                        "response_format": {
                            "mode": "chose",
                            "label": "Text"
                        },
                        "additionalParameters": {
                            "mode": "chose"
                        }
                    },
                    "parameters": {
                        "__IMTCONN__": {
                            "data": {
                                "scoped": "true",
                                "connection": "openai-gpt-3"
                            },
                            "label": "Make Ent GPT4"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:openai-gpt-3",
                        "label": "Connection"
                    }
                ],
                "expect": [
                    {
                        "name": "select",
                        "type": "select",
                        "label": "Select Method",
                        "required": true,
                        "validate": {
                            "enum": [
                                "chat",
                                "prompt"
                            ]
                        }
                    },
                    {
                        "name": "max_tokens",
                        "type": "number",
                        "label": "Max Tokens",
                        "required": true
                    },
                    {
                        "name": "temperature",
                        "type": "number",
                        "label": "Temperature",
                        "validate": {
                            "max": 2,
                            "min": 0
                        }
                    },
                    {
                        "name": "top_p",
                        "type": "number",
                        "label": "Top P",
                        "validate": {
                            "max": 1,
                            "min": 0
                        }
                    },
                    {
                        "name": "n_completions",
                        "type": "number",
                        "label": "Number"
                    },
                    {
                        "name": "frequency_penalty",
                        "type": "number",
                        "label": "Frequency Penalty",
                        "validate": {
                            "max": 2,
                            "min": -2
                        }
                    },
                    {
                        "name": "presence_penalty",
                        "type": "number",
                        "label": "Presence Penalty",
                        "validate": {
                            "max": 2,
                            "min": -2
                        }
                    },
                    {
                        "name": "logit_bias",
                        "spec": {
                            "name": "value",
                            "spec": [
                                {
                                    "name": "token",
                                    "type": "text",
                                    "label": "Token ID",
                                    "required": true
                                },
                                {
                                    "name": "probability",
                                    "type": "number",
                                    "label": "Probability",
                                    "required": true,
                                    "validate": {
                                        "max": 100,
                                        "min": -100
                                    }
                                }
                            ],
                            "type": "collection",
                            "label": "Token Probability"
                        },
                        "type": "array",
                        "label": "Token Probability"
                    },
                    {
                        "name": "response_format",
                        "type": "select",
                        "label": "Response Format",
                        "validate": {
                            "enum": [
                                "text",
                                "json_object"
                            ]
                        }
                    },
                    {
                        "name": "seed",
                        "type": "integer",
                        "label": "Seed"
                    },
                    {
                        "name": "stop",
                        "spec": {
                            "name": "value",
                            "type": "text",
                            "label": "Stop Sequence"
                        },
                        "type": "array",
                        "label": "Stop Sequences",
                        "validate": {
                            "maxItems": 4
                        }
                    },
                    {
                        "name": "additionalParameters",
                        "spec": {
                            "name": "value",
                            "spec": [
                                {
                                    "name": "key",
                                    "type": "text",
                                    "label": "Parameter Name",
                                    "required": true
                                },
                                {
                                    "name": "type",
                                    "type": "select",
                                    "label": "Input Type",
                                    "options": [
                                        {
                                            "label": "Text",
                                            "value": "text",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "text",
                                                    "label": "Parameter Value"
                                                }
                                            ],
                                            "default": true
                                        },
                                        {
                                            "label": "Number",
                                            "value": "number",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "number",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Boolean",
                                            "value": "boolean",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "boolean",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Date",
                                            "value": "date",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "date",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Any",
                                            "value": "any",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "any",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "type": "collection",
                            "label": "Input Parameter"
                        },
                        "type": "array",
                        "label": "Other Input Parameters"
                    },
                    {
                        "name": "model",
                        "type": "select",
                        "label": "Model",
                        "required": true
                    },
                    {
                        "name": "messages",
                        "spec": {
                            "name": "value",
                            "spec": [
                                {
                                    "name": "role",
                                    "type": "select",
                                    "label": "Role",
                                    "options": [
                                        {
                                            "label": "System",
                                            "value": "system"
                                        },
                                        {
                                            "label": "User",
                                            "value": "user"
                                        },
                                        {
                                            "label": "Assistant",
                                            "value": "assistant"
                                        }
                                    ],
                                    "required": true
                                },
                                {
                                    "name": "content",
                                    "type": "text",
                                    "label": "Message Content"
                                }
                            ],
                            "type": "collection",
                            "label": "Message"
                        },
                        "type": "array",
                        "label": "Messages",
                        "required": true
                    }
                ],
                "advanced": true
            }
        },
        {
            "id": 19,
            "module": "openai-gpt-3:CreateCompletion",
            "version": 1,
            "parameters": {},
            "mapper": {
                "model": "{{9.model}}",
                "top_p": "1",
                "select": "chat",
                "messages": [
                    {
                        "role": "user",
                        "content": "Brand Name: {{28.`Brand Name`}}\nBrand info: {{28.`Brand Information`}}\n\nYou are a brand strategist skilled at defining a brand's core values and long-term goals. Your brand's core values should answer these important questions:\n\n- What core ideals guide your brand and how it operates?\n\n- What moral compass or philosophy does your brand follow when making decisions?  \n\n- What underlying tenets or rules does your brand adhere to in its work and interactions?\n\nPlease keep your response to each answer concise - maximum of 3 sentences to enhance its clarity and memorability.\nPlease leave a line after each answer but do not rewrite the questions.\n\nTitle it: Brand Core Values\nDo not include any characters before the title.\nDo not make assumptions.\n\nOnce you have completed the above, create a brand core values statement incorporating your response and use the following guidelines:\n\n- Length: Typically 3-5 sentences or about 50-75 words. A brand vision should be concise but inspiring.\n\n- Focus: Describe your ideal future state and aspiration. Use words that convey what success looks like for customers and the broader impact of your brand.\n\n- Clarity: Use simple, straightforward language that's easy to understand. Avoid jargon or vague buzzwords.\n\n- Specificity: While broad, the vision should give a sense of specificity about what markets, customers or outcomes the brand aims to impact.\n\n- Authenticity: Align the vision with your company's true purpose, values and capabilities. It should feel authentic to your brand identity.\n\n- Inspiration: Craft the vision in a way that motivates and inspires employees. It should pull the brand in its desired direction.\n\n- Measurement: The vision should describe aspirational outcomes that can eventually be measured concretely through metrics like customer satisfaction or market leadership.\n\n- Durability: Aim for a vision that will remain relevant for 3-5 years. It needs flexibility to adapt to changing market conditions.\n\n- Concise expression: Try to express the vision in a single, memorable sentence if possible. But 50-75 words allows enough depth.\n\nTitle this: *Brand Core Values Statement* and output the text in Italics.\n\nMake it sound human-like, not complicated and easy for the average reader to read."
                    }
                ],
                "max_tokens": "1000",
                "temperature": "0.7",
                "n_completions": "1",
                "response_format": "text"
            },
            "metadata": {
                "designer": {
                    "x": 900,
                    "y": 0,
                    "name": "Core Values"
                },
                "restore": {
                    "expect": {
                        "stop": {
                            "mode": "chose"
                        },
                        "model": {
                            "mode": "edit"
                        },
                        "select": {
                            "label": "Create a Chat Completion (GPT Models)"
                        },
                        "messages": {
                            "mode": "chose",
                            "items": [
                                {
                                    "role": {
                                        "mode": "chose",
                                        "label": "User"
                                    }
                                }
                            ]
                        },
                        "logit_bias": {
                            "mode": "chose"
                        },
                        "response_format": {
                            "mode": "chose",
                            "label": "Text"
                        },
                        "additionalParameters": {
                            "mode": "chose"
                        }
                    },
                    "parameters": {
                        "__IMTCONN__": {
                            "data": {
                                "scoped": "true",
                                "connection": "openai-gpt-3"
                            },
                            "label": "Make Ent GPT4"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:openai-gpt-3",
                        "label": "Connection"
                    }
                ],
                "expect": [
                    {
                        "name": "select",
                        "type": "select",
                        "label": "Select Method",
                        "required": true,
                        "validate": {
                            "enum": [
                                "chat",
                                "prompt"
                            ]
                        }
                    },
                    {
                        "name": "max_tokens",
                        "type": "number",
                        "label": "Max Tokens",
                        "required": true
                    },
                    {
                        "name": "temperature",
                        "type": "number",
                        "label": "Temperature",
                        "validate": {
                            "max": 2,
                            "min": 0
                        }
                    },
                    {
                        "name": "top_p",
                        "type": "number",
                        "label": "Top P",
                        "validate": {
                            "max": 1,
                            "min": 0
                        }
                    },
                    {
                        "name": "n_completions",
                        "type": "number",
                        "label": "Number"
                    },
                    {
                        "name": "frequency_penalty",
                        "type": "number",
                        "label": "Frequency Penalty",
                        "validate": {
                            "max": 2,
                            "min": -2
                        }
                    },
                    {
                        "name": "presence_penalty",
                        "type": "number",
                        "label": "Presence Penalty",
                        "validate": {
                            "max": 2,
                            "min": -2
                        }
                    },
                    {
                        "name": "logit_bias",
                        "spec": {
                            "name": "value",
                            "spec": [
                                {
                                    "name": "token",
                                    "type": "text",
                                    "label": "Token ID",
                                    "required": true
                                },
                                {
                                    "name": "probability",
                                    "type": "number",
                                    "label": "Probability",
                                    "required": true,
                                    "validate": {
                                        "max": 100,
                                        "min": -100
                                    }
                                }
                            ],
                            "type": "collection",
                            "label": "Token Probability"
                        },
                        "type": "array",
                        "label": "Token Probability"
                    },
                    {
                        "name": "response_format",
                        "type": "select",
                        "label": "Response Format",
                        "validate": {
                            "enum": [
                                "text",
                                "json_object"
                            ]
                        }
                    },
                    {
                        "name": "seed",
                        "type": "integer",
                        "label": "Seed"
                    },
                    {
                        "name": "stop",
                        "spec": {
                            "name": "value",
                            "type": "text",
                            "label": "Stop Sequence"
                        },
                        "type": "array",
                        "label": "Stop Sequences",
                        "validate": {
                            "maxItems": 4
                        }
                    },
                    {
                        "name": "additionalParameters",
                        "spec": {
                            "name": "value",
                            "spec": [
                                {
                                    "name": "key",
                                    "type": "text",
                                    "label": "Parameter Name",
                                    "required": true
                                },
                                {
                                    "name": "type",
                                    "type": "select",
                                    "label": "Input Type",
                                    "options": [
                                        {
                                            "label": "Text",
                                            "value": "text",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "text",
                                                    "label": "Parameter Value"
                                                }
                                            ],
                                            "default": true
                                        },
                                        {
                                            "label": "Number",
                                            "value": "number",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "number",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Boolean",
                                            "value": "boolean",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "boolean",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Date",
                                            "value": "date",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "date",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Any",
                                            "value": "any",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "any",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "type": "collection",
                            "label": "Input Parameter"
                        },
                        "type": "array",
                        "label": "Other Input Parameters"
                    },
                    {
                        "name": "model",
                        "type": "select",
                        "label": "Model",
                        "required": true
                    },
                    {
                        "name": "messages",
                        "spec": {
                            "name": "value",
                            "spec": [
                                {
                                    "name": "role",
                                    "type": "select",
                                    "label": "Role",
                                    "options": [
                                        {
                                            "label": "System",
                                            "value": "system"
                                        },
                                        {
                                            "label": "User",
                                            "value": "user"
                                        },
                                        {
                                            "label": "Assistant",
                                            "value": "assistant"
                                        }
                                    ],
                                    "required": true
                                },
                                {
                                    "name": "content",
                                    "type": "text",
                                    "label": "Message Content"
                                }
                            ],
                            "type": "collection",
                            "label": "Message"
                        },
                        "type": "array",
                        "label": "Messages",
                        "required": true
                    }
                ],
                "advanced": true
            }
        },
        {
            "id": 17,
            "module": "openai-gpt-3:CreateCompletion",
            "version": 1,
            "parameters": {},
            "mapper": {
                "model": "{{19.model}}",
                "top_p": "1",
                "select": "chat",
                "messages": [
                    {
                        "role": "user",
                        "content": "Brand Name: {{28.`Brand Name`}}\nBrand info: {{28.`Brand Information`}}\n\nYou are a professional brand strategist skilled at defining a brand's purpose accurately.\n\nWhen defining your brand's purpose, consider these important questions:\n\nBesides economic gain, what deeper purpose drives your efforts? \n\nWhose well-being do you strive to promote through your work?\n\nIn practical terms, what value will you create for those you support?\n\nWhat system will you implement to ensure commitments are fulfilled?\n\nHow will you enable or empower others through your contributions?\n\nPlease keep your response to each answer concise - maximum of 3 sentences to enhance its clarity and memorability.\nPlease leave a line after each answer but do not rewrite the questions.\n\nTitle it: Brand Purpose\nDo not include any characters before the title.\nDo not make assumptions.\n\nOnce you have completed the above, create a brand purpose statement of 15-20 words incorporating your response and use the following guidelines:\n\n- Keep it concise - 1-2 sentences is usually enough to clearly and concisely capture the essence of your purpose. Long paragraphs can get wordy and lose people.\n\n- Make it memorable - Use simple, easy to understand language. Avoid buzzwords and jargon. You want people to be able to easily recall and repeat your purpose statement.\n\n- Reflect your values - Your purpose should align with and communicate the core values and principles that guide your business.\n\n- Be specific to your industry/market - While a purpose can have universal appeal, it needs to be grounded in what your business specifically does and who it serves.\n\n- Focus on benefiting others - Avoid self-focused language like profits or revenue. Explain how your business benefits customers and stakeholders.\n\n- Allow for flexibility - Don't make it too rigid that it can't evolve with your business over time. But the core message should remain consistent.\n\nTitle this: *Brand Purpose Statement* and output the text in Italics.\n\nMake it sound human-like, not complicated and easy for the average reader to read."
                    }
                ],
                "max_tokens": "1000",
                "temperature": "0.7",
                "n_completions": "1",
                "response_format": "text"
            },
            "metadata": {
                "designer": {
                    "x": 1200,
                    "y": 0,
                    "name": "Brand Purpose"
                },
                "restore": {
                    "expect": {
                        "stop": {
                            "mode": "chose"
                        },
                        "model": {
                            "mode": "edit"
                        },
                        "select": {
                            "label": "Create a Chat Completion (GPT Models)"
                        },
                        "messages": {
                            "mode": "chose",
                            "items": [
                                {
                                    "role": {
                                        "mode": "chose",
                                        "label": "User"
                                    }
                                }
                            ]
                        },
                        "logit_bias": {
                            "mode": "chose"
                        },
                        "response_format": {
                            "mode": "chose",
                            "label": "Text"
                        },
                        "additionalParameters": {
                            "mode": "chose"
                        }
                    },
                    "parameters": {
                        "__IMTCONN__": {
                            "data": {
                                "scoped": "true",
                                "connection": "openai-gpt-3"
                            },
                            "label": "Make Ent GPT4"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:openai-gpt-3",
                        "label": "Connection"
                    }
                ],
                "expect": [
                    {
                        "name": "select",
                        "type": "select",
                        "label": "Select Method",
                        "required": true,
                        "validate": {
                            "enum": [
                                "chat",
                                "prompt"
                            ]
                        }
                    },
                    {
                        "name": "max_tokens",
                        "type": "number",
                        "label": "Max Tokens",
                        "required": true
                    },
                    {
                        "name": "temperature",
                        "type": "number",
                        "label": "Temperature",
                        "validate": {
                            "max": 2,
                            "min": 0
                        }
                    },
                    {
                        "name": "top_p",
                        "type": "number",
                        "label": "Top P",
                        "validate": {
                            "max": 1,
                            "min": 0
                        }
                    },
                    {
                        "name": "n_completions",
                        "type": "number",
                        "label": "Number"
                    },
                    {
                        "name": "frequency_penalty",
                        "type": "number",
                        "label": "Frequency Penalty",
                        "validate": {
                            "max": 2,
                            "min": -2
                        }
                    },
                    {
                        "name": "presence_penalty",
                        "type": "number",
                        "label": "Presence Penalty",
                        "validate": {
                            "max": 2,
                            "min": -2
                        }
                    },
                    {
                        "name": "logit_bias",
                        "spec": {
                            "name": "value",
                            "spec": [
                                {
                                    "name": "token",
                                    "type": "text",
                                    "label": "Token ID",
                                    "required": true
                                },
                                {
                                    "name": "probability",
                                    "type": "number",
                                    "label": "Probability",
                                    "required": true,
                                    "validate": {
                                        "max": 100,
                                        "min": -100
                                    }
                                }
                            ],
                            "type": "collection",
                            "label": "Token Probability"
                        },
                        "type": "array",
                        "label": "Token Probability"
                    },
                    {
                        "name": "response_format",
                        "type": "select",
                        "label": "Response Format",
                        "validate": {
                            "enum": [
                                "text",
                                "json_object"
                            ]
                        }
                    },
                    {
                        "name": "seed",
                        "type": "integer",
                        "label": "Seed"
                    },
                    {
                        "name": "stop",
                        "spec": {
                            "name": "value",
                            "type": "text",
                            "label": "Stop Sequence"
                        },
                        "type": "array",
                        "label": "Stop Sequences",
                        "validate": {
                            "maxItems": 4
                        }
                    },
                    {
                        "name": "additionalParameters",
                        "spec": {
                            "name": "value",
                            "spec": [
                                {
                                    "name": "key",
                                    "type": "text",
                                    "label": "Parameter Name",
                                    "required": true
                                },
                                {
                                    "name": "type",
                                    "type": "select",
                                    "label": "Input Type",
                                    "options": [
                                        {
                                            "label": "Text",
                                            "value": "text",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "text",
                                                    "label": "Parameter Value"
                                                }
                                            ],
                                            "default": true
                                        },
                                        {
                                            "label": "Number",
                                            "value": "number",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "number",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Boolean",
                                            "value": "boolean",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "boolean",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Date",
                                            "value": "date",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "date",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Any",
                                            "value": "any",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "any",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "type": "collection",
                            "label": "Input Parameter"
                        },
                        "type": "array",
                        "label": "Other Input Parameters"
                    },
                    {
                        "name": "model",
                        "type": "select",
                        "label": "Model",
                        "required": true
                    },
                    {
                        "name": "messages",
                        "spec": {
                            "name": "value",
                            "spec": [
                                {
                                    "name": "role",
                                    "type": "select",
                                    "label": "Role",
                                    "options": [
                                        {
                                            "label": "System",
                                            "value": "system"
                                        },
                                        {
                                            "label": "User",
                                            "value": "user"
                                        },
                                        {
                                            "label": "Assistant",
                                            "value": "assistant"
                                        }
                                    ],
                                    "required": true
                                },
                                {
                                    "name": "content",
                                    "type": "text",
                                    "label": "Message Content"
                                }
                            ],
                            "type": "collection",
                            "label": "Message"
                        },
                        "type": "array",
                        "label": "Messages",
                        "required": true
                    }
                ],
                "advanced": true
            }
        },
        {
            "id": 21,
            "module": "openai-gpt-3:CreateCompletion",
            "version": 1,
            "parameters": {},
            "mapper": {
                "model": "{{17.model}}",
                "top_p": "1",
                "select": "chat",
                "messages": [
                    {
                        "role": "user",
                        "content": "Brand Name: {{28.`Brand Name`}}\nBrand info: {{28.`Brand Information`}}\n\nYou are a brand strategist skilled at defining brand personality and long-term goals. Your brand personality should answer these important questions:\n\n- What human qualities or attributes does your brand strive to represent?\n\n- Which human characteristics would you say your brand's personality aligns with? \n\n- How would you describe the type of relationship your brand aims to build with its customers or audience?\n\nPlease keep your response to each answer concise - maximum of 3 sentences to enhance its clarity and memorability.\nPlease leave a line after each answer but do not rewrite the questions.\n\nTitle it: Brand Personality\nDo not include any characters before the title.\nDo not make assumptions.\n\nOnce you have completed the above, create a brand differentiation statement incorporating your response and use the following guidelines:\n\n- Keep it concise - usually 3-5 traits is sufficient. Any more than that and it becomes hard to remember and convey consistently.\n\n- Use vivid, emotive words rather than vague descriptors. For example, say \"fun-loving\" rather than just \"fun\".\n\n- Pick traits that are ownable - things that will uniquely describe your brand rather than be shared by many competitors.\n\n- Consider your target customers - the traits should match how you want customers to perceive your brand. Pick personality traits they will find appealing.\n\n- Make sure the traits are consistent with your brand's positioning, products/services, and communications. The personality should reflect and enhance your overall brand image.\n\n- Between 3-5 sentences is typically the perfect length. Longer than that and it loses its punchiness. Shorter than that risks leaving out important details.\n\n- Include an \"is\" statement like \"Our brand is reliable, friendly, and hard-working.\" This anchors the traits explicitly to your brand.\n\n- Test it to ensure it resonates with your target segments. Get feedback and refine as needed.\n\nTitle this: *Brand Personality Statement* and output the text in Italics.\n\nMake it sound human-like, not complicated and easy for the average reader to read."
                    }
                ],
                "max_tokens": "1000",
                "temperature": "0.7",
                "n_completions": "1",
                "response_format": "text"
            },
            "metadata": {
                "designer": {
                    "x": 1500,
                    "y": 0,
                    "name": "Brand Personality"
                },
                "restore": {
                    "expect": {
                        "stop": {
                            "mode": "chose"
                        },
                        "model": {
                            "mode": "edit"
                        },
                        "select": {
                            "label": "Create a Chat Completion (GPT Models)"
                        },
                        "messages": {
                            "mode": "chose",
                            "items": [
                                {
                                    "role": {
                                        "mode": "chose",
                                        "label": "User"
                                    }
                                }
                            ]
                        },
                        "logit_bias": {
                            "mode": "chose"
                        },
                        "response_format": {
                            "mode": "chose",
                            "label": "Text"
                        },
                        "additionalParameters": {
                            "mode": "chose"
                        }
                    },
                    "parameters": {
                        "__IMTCONN__": {
                            "data": {
                                "scoped": "true",
                                "connection": "openai-gpt-3"
                            },
                            "label": "Make Ent GPT4"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:openai-gpt-3",
                        "label": "Connection"
                    }
                ],
                "expect": [
                    {
                        "name": "select",
                        "type": "select",
                        "label": "Select Method",
                        "required": true,
                        "validate": {
                            "enum": [
                                "chat",
                                "prompt"
                            ]
                        }
                    },
                    {
                        "name": "max_tokens",
                        "type": "number",
                        "label": "Max Tokens",
                        "required": true
                    },
                    {
                        "name": "temperature",
                        "type": "number",
                        "label": "Temperature",
                        "validate": {
                            "max": 2,
                            "min": 0
                        }
                    },
                    {
                        "name": "top_p",
                        "type": "number",
                        "label": "Top P",
                        "validate": {
                            "max": 1,
                            "min": 0
                        }
                    },
                    {
                        "name": "n_completions",
                        "type": "number",
                        "label": "Number"
                    },
                    {
                        "name": "frequency_penalty",
                        "type": "number",
                        "label": "Frequency Penalty",
                        "validate": {
                            "max": 2,
                            "min": -2
                        }
                    },
                    {
                        "name": "presence_penalty",
                        "type": "number",
                        "label": "Presence Penalty",
                        "validate": {
                            "max": 2,
                            "min": -2
                        }
                    },
                    {
                        "name": "logit_bias",
                        "spec": {
                            "name": "value",
                            "spec": [
                                {
                                    "name": "token",
                                    "type": "text",
                                    "label": "Token ID",
                                    "required": true
                                },
                                {
                                    "name": "probability",
                                    "type": "number",
                                    "label": "Probability",
                                    "required": true,
                                    "validate": {
                                        "max": 100,
                                        "min": -100
                                    }
                                }
                            ],
                            "type": "collection",
                            "label": "Token Probability"
                        },
                        "type": "array",
                        "label": "Token Probability"
                    },
                    {
                        "name": "response_format",
                        "type": "select",
                        "label": "Response Format",
                        "validate": {
                            "enum": [
                                "text",
                                "json_object"
                            ]
                        }
                    },
                    {
                        "name": "seed",
                        "type": "integer",
                        "label": "Seed"
                    },
                    {
                        "name": "stop",
                        "spec": {
                            "name": "value",
                            "type": "text",
                            "label": "Stop Sequence"
                        },
                        "type": "array",
                        "label": "Stop Sequences",
                        "validate": {
                            "maxItems": 4
                        }
                    },
                    {
                        "name": "additionalParameters",
                        "spec": {
                            "name": "value",
                            "spec": [
                                {
                                    "name": "key",
                                    "type": "text",
                                    "label": "Parameter Name",
                                    "required": true
                                },
                                {
                                    "name": "type",
                                    "type": "select",
                                    "label": "Input Type",
                                    "options": [
                                        {
                                            "label": "Text",
                                            "value": "text",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "text",
                                                    "label": "Parameter Value"
                                                }
                                            ],
                                            "default": true
                                        },
                                        {
                                            "label": "Number",
                                            "value": "number",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "number",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Boolean",
                                            "value": "boolean",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "boolean",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Date",
                                            "value": "date",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "date",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Any",
                                            "value": "any",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "any",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "type": "collection",
                            "label": "Input Parameter"
                        },
                        "type": "array",
                        "label": "Other Input Parameters"
                    },
                    {
                        "name": "model",
                        "type": "select",
                        "label": "Model",
                        "required": true
                    },
                    {
                        "name": "messages",
                        "spec": {
                            "name": "value",
                            "spec": [
                                {
                                    "name": "role",
                                    "type": "select",
                                    "label": "Role",
                                    "options": [
                                        {
                                            "label": "System",
                                            "value": "system"
                                        },
                                        {
                                            "label": "User",
                                            "value": "user"
                                        },
                                        {
                                            "label": "Assistant",
                                            "value": "assistant"
                                        }
                                    ],
                                    "required": true
                                },
                                {
                                    "name": "content",
                                    "type": "text",
                                    "label": "Message Content"
                                }
                            ],
                            "type": "collection",
                            "label": "Message"
                        },
                        "type": "array",
                        "label": "Messages",
                        "required": true
                    }
                ],
                "advanced": true
            }
        },
        {
            "id": 20,
            "module": "openai-gpt-3:CreateCompletion",
            "version": 1,
            "parameters": {},
            "mapper": {
                "model": "{{21.model}}",
                "top_p": "1",
                "select": "chat",
                "messages": [
                    {
                        "role": "user",
                        "content": "Brand Name: {{28.`Brand Name`}}\nBrand info: {{28.`Brand Information`}}\n\nYou are a brand strategist skilled at defining brand differentiation and long-term goals. Your brand differentiation should answer these important questions:\n\n- How does your company/product meet customer needs in a way that others do not?\n\n- What key advantages do you offer that competitors do not provide? \n\n- What specific attributes or characteristics allow your brand to stand out from similar options available?\n\nPlease keep your response to each answer concise - maximum of 3 sentences to enhance its clarity and memorability.\nPlease leave a line after each answer but do not rewrite the questions.\n\nTitle it: Brand Differentiation\nDo not include any characters before the title.\nDo not make assumptions.\n\nOnce you have completed the above, create a brand differentiation statement incorporating your response and use the following guidelines:\n\nLength:\n- A well-defined statement on brand differentiation should be 3-5 sentences. This length allows you to clearly articulate what makes your brand unique without being too verbose.\n\nGeneral Guidelines:\n- Focus on a single, clear differentiator. Don't try to list multiple things that make you different. Pick one core idea.\n\n- Use benefit-oriented language to explain how your brand differentiator satisfies customer needs/wants better than competitors. Don't just state features. \n\n- Get granular. Don't say \"We provide excellent customer service.\" Explain specifically how you define and deliver excellent service.\n\n- Make it believable by backing up claims with factual evidence if possible, like statistics, case studies or certifications.\n\n- Position your differentiation as the logical choice for your target customers given their particular wants/needs. Explain why it matters to them.\n\n- Keep it coherent by using parallel sentence structure and a consistent tone. Make it scannable. \n\n- Limit industry jargon. Explain concepts simply for all audiences in your marketing.\n\n- Define your differentiation in the context of your overall unique selling proposition and company mission/vision.\n\nTitle this: *Brand Differentiation Statement* and output the text in Italics.\n\nMake it sound human-like, not complicated and easy for the average reader to read."
                    }
                ],
                "max_tokens": "1000",
                "temperature": "0.7",
                "n_completions": "1",
                "response_format": "text"
            },
            "metadata": {
                "designer": {
                    "x": 1800,
                    "y": 0,
                    "name": "Brand Differentiation"
                },
                "restore": {
                    "expect": {
                        "stop": {
                            "mode": "chose"
                        },
                        "model": {
                            "mode": "edit"
                        },
                        "select": {
                            "label": "Create a Chat Completion (GPT Models)"
                        },
                        "messages": {
                            "mode": "chose",
                            "items": [
                                {
                                    "role": {
                                        "mode": "chose",
                                        "label": "User"
                                    }
                                }
                            ]
                        },
                        "logit_bias": {
                            "mode": "chose"
                        },
                        "response_format": {
                            "mode": "chose",
                            "label": "Text"
                        },
                        "additionalParameters": {
                            "mode": "chose"
                        }
                    },
                    "parameters": {
                        "__IMTCONN__": {
                            "data": {
                                "scoped": "true",
                                "connection": "openai-gpt-3"
                            },
                            "label": "Make Ent GPT4"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:openai-gpt-3",
                        "label": "Connection"
                    }
                ],
                "expect": [
                    {
                        "name": "select",
                        "type": "select",
                        "label": "Select Method",
                        "required": true,
                        "validate": {
                            "enum": [
                                "chat",
                                "prompt"
                            ]
                        }
                    },
                    {
                        "name": "max_tokens",
                        "type": "number",
                        "label": "Max Tokens",
                        "required": true
                    },
                    {
                        "name": "temperature",
                        "type": "number",
                        "label": "Temperature",
                        "validate": {
                            "max": 2,
                            "min": 0
                        }
                    },
                    {
                        "name": "top_p",
                        "type": "number",
                        "label": "Top P",
                        "validate": {
                            "max": 1,
                            "min": 0
                        }
                    },
                    {
                        "name": "n_completions",
                        "type": "number",
                        "label": "Number"
                    },
                    {
                        "name": "frequency_penalty",
                        "type": "number",
                        "label": "Frequency Penalty",
                        "validate": {
                            "max": 2,
                            "min": -2
                        }
                    },
                    {
                        "name": "presence_penalty",
                        "type": "number",
                        "label": "Presence Penalty",
                        "validate": {
                            "max": 2,
                            "min": -2
                        }
                    },
                    {
                        "name": "logit_bias",
                        "spec": {
                            "name": "value",
                            "spec": [
                                {
                                    "name": "token",
                                    "type": "text",
                                    "label": "Token ID",
                                    "required": true
                                },
                                {
                                    "name": "probability",
                                    "type": "number",
                                    "label": "Probability",
                                    "required": true,
                                    "validate": {
                                        "max": 100,
                                        "min": -100
                                    }
                                }
                            ],
                            "type": "collection",
                            "label": "Token Probability"
                        },
                        "type": "array",
                        "label": "Token Probability"
                    },
                    {
                        "name": "response_format",
                        "type": "select",
                        "label": "Response Format",
                        "validate": {
                            "enum": [
                                "text",
                                "json_object"
                            ]
                        }
                    },
                    {
                        "name": "seed",
                        "type": "integer",
                        "label": "Seed"
                    },
                    {
                        "name": "stop",
                        "spec": {
                            "name": "value",
                            "type": "text",
                            "label": "Stop Sequence"
                        },
                        "type": "array",
                        "label": "Stop Sequences",
                        "validate": {
                            "maxItems": 4
                        }
                    },
                    {
                        "name": "additionalParameters",
                        "spec": {
                            "name": "value",
                            "spec": [
                                {
                                    "name": "key",
                                    "type": "text",
                                    "label": "Parameter Name",
                                    "required": true
                                },
                                {
                                    "name": "type",
                                    "type": "select",
                                    "label": "Input Type",
                                    "options": [
                                        {
                                            "label": "Text",
                                            "value": "text",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "text",
                                                    "label": "Parameter Value"
                                                }
                                            ],
                                            "default": true
                                        },
                                        {
                                            "label": "Number",
                                            "value": "number",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "number",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Boolean",
                                            "value": "boolean",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "boolean",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Date",
                                            "value": "date",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "date",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Any",
                                            "value": "any",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "any",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "type": "collection",
                            "label": "Input Parameter"
                        },
                        "type": "array",
                        "label": "Other Input Parameters"
                    },
                    {
                        "name": "model",
                        "type": "select",
                        "label": "Model",
                        "required": true
                    },
                    {
                        "name": "messages",
                        "spec": {
                            "name": "value",
                            "spec": [
                                {
                                    "name": "role",
                                    "type": "select",
                                    "label": "Role",
                                    "options": [
                                        {
                                            "label": "System",
                                            "value": "system"
                                        },
                                        {
                                            "label": "User",
                                            "value": "user"
                                        },
                                        {
                                            "label": "Assistant",
                                            "value": "assistant"
                                        }
                                    ],
                                    "required": true
                                },
                                {
                                    "name": "content",
                                    "type": "text",
                                    "label": "Message Content"
                                }
                            ],
                            "type": "collection",
                            "label": "Message"
                        },
                        "type": "array",
                        "label": "Messages",
                        "required": true
                    }
                ],
                "advanced": true
            }
        },
        {
            "id": 22,
            "module": "openai-gpt-3:CreateCompletion",
            "version": 1,
            "parameters": {},
            "mapper": {
                "model": "{{20.model}}",
                "top_p": "1",
                "select": "chat",
                "messages": [
                    {
                        "role": "user",
                        "content": "Brand Name: {{28.`Brand Name`}}\nBrand info: {{28.`Brand Information`}}\n\nYou are a brand strategist skilled at defining a brand's story and long-term goals. Your brand's story should answer these important questions:\n\n- How has the brand's story and development changed over time?  \n\n- What core values and themes define the brand's history and growth?\n\n- What is the brand's distinguishing history and progression?\n\nPlease leave a line after each answer but do not rewrite the questions.\n\n- Keep it concise - aim for around 150-300 words max. Any longer and you risk losing people's attention.\n\n- Focus on one core message or theme rather than multiple points. This helps keep it tight and memorable.\n\n- Ideally the story should be 3-4 concise paragraphs at most. Any more than that and it gets wordy.\n\n- The first paragraph should grab attention and set up context/backstory. Lay the groundwork for the message.\n\n- The second paragraph should deliver the central insight, lesson or motivation behind the brand in an engaging way.\n\n- The third and final paragraph can reiterate the core message and call to action if needed. But try to end strong and leave them wanting more.\n\n- Use vivid imagery and sensory details to bring the story to life. But keep descriptions simple and impactful.\n\n- Employ active verbs and a conversational tone to engage the reader rather than put them to sleep.\n\n- Edit rigorously to eliminate any unnecessary words or digressions from the main point.\n\n- Keep language simple and avoid jargon. The story should be accessible to all.\n\nTitle it: Brand Story\nDo not include any characters before the title.\nDo not make assumptions.\n\nMake it sound human-like, not complicated and easy for the average reader to read.\n"
                    }
                ],
                "max_tokens": "1000",
                "temperature": "0.7",
                "n_completions": "1",
                "response_format": "text"
            },
            "metadata": {
                "designer": {
                    "x": 2100,
                    "y": 0,
                    "name": "Brand Story"
                },
                "restore": {
                    "expect": {
                        "stop": {
                            "mode": "chose"
                        },
                        "model": {
                            "mode": "edit"
                        },
                        "select": {
                            "label": "Create a Chat Completion (GPT Models)"
                        },
                        "messages": {
                            "mode": "chose",
                            "items": [
                                {
                                    "role": {
                                        "mode": "chose",
                                        "label": "User"
                                    }
                                }
                            ]
                        },
                        "logit_bias": {
                            "mode": "chose"
                        },
                        "response_format": {
                            "mode": "chose",
                            "label": "Text"
                        },
                        "additionalParameters": {
                            "mode": "chose"
                        }
                    },
                    "parameters": {
                        "__IMTCONN__": {
                            "data": {
                                "scoped": "true",
                                "connection": "openai-gpt-3"
                            },
                            "label": "Make Ent GPT4"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:openai-gpt-3",
                        "label": "Connection"
                    }
                ],
                "expect": [
                    {
                        "name": "select",
                        "type": "select",
                        "label": "Select Method",
                        "required": true,
                        "validate": {
                            "enum": [
                                "chat",
                                "prompt"
                            ]
                        }
                    },
                    {
                        "name": "max_tokens",
                        "type": "number",
                        "label": "Max Tokens",
                        "required": true
                    },
                    {
                        "name": "temperature",
                        "type": "number",
                        "label": "Temperature",
                        "validate": {
                            "max": 2,
                            "min": 0
                        }
                    },
                    {
                        "name": "top_p",
                        "type": "number",
                        "label": "Top P",
                        "validate": {
                            "max": 1,
                            "min": 0
                        }
                    },
                    {
                        "name": "n_completions",
                        "type": "number",
                        "label": "Number"
                    },
                    {
                        "name": "frequency_penalty",
                        "type": "number",
                        "label": "Frequency Penalty",
                        "validate": {
                            "max": 2,
                            "min": -2
                        }
                    },
                    {
                        "name": "presence_penalty",
                        "type": "number",
                        "label": "Presence Penalty",
                        "validate": {
                            "max": 2,
                            "min": -2
                        }
                    },
                    {
                        "name": "logit_bias",
                        "spec": {
                            "name": "value",
                            "spec": [
                                {
                                    "name": "token",
                                    "type": "text",
                                    "label": "Token ID",
                                    "required": true
                                },
                                {
                                    "name": "probability",
                                    "type": "number",
                                    "label": "Probability",
                                    "required": true,
                                    "validate": {
                                        "max": 100,
                                        "min": -100
                                    }
                                }
                            ],
                            "type": "collection",
                            "label": "Token Probability"
                        },
                        "type": "array",
                        "label": "Token Probability"
                    },
                    {
                        "name": "response_format",
                        "type": "select",
                        "label": "Response Format",
                        "validate": {
                            "enum": [
                                "text",
                                "json_object"
                            ]
                        }
                    },
                    {
                        "name": "seed",
                        "type": "integer",
                        "label": "Seed"
                    },
                    {
                        "name": "stop",
                        "spec": {
                            "name": "value",
                            "type": "text",
                            "label": "Stop Sequence"
                        },
                        "type": "array",
                        "label": "Stop Sequences",
                        "validate": {
                            "maxItems": 4
                        }
                    },
                    {
                        "name": "additionalParameters",
                        "spec": {
                            "name": "value",
                            "spec": [
                                {
                                    "name": "key",
                                    "type": "text",
                                    "label": "Parameter Name",
                                    "required": true
                                },
                                {
                                    "name": "type",
                                    "type": "select",
                                    "label": "Input Type",
                                    "options": [
                                        {
                                            "label": "Text",
                                            "value": "text",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "text",
                                                    "label": "Parameter Value"
                                                }
                                            ],
                                            "default": true
                                        },
                                        {
                                            "label": "Number",
                                            "value": "number",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "number",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Boolean",
                                            "value": "boolean",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "boolean",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Date",
                                            "value": "date",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "date",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        },
                                        {
                                            "label": "Any",
                                            "value": "any",
                                            "nested": [
                                                {
                                                    "name": "value",
                                                    "type": "any",
                                                    "label": "Parameter Value"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ],
                            "type": "collection",
                            "label": "Input Parameter"
                        },
                        "type": "array",
                        "label": "Other Input Parameters"
                    },
                    {
                        "name": "model",
                        "type": "select",
                        "label": "Model",
                        "required": true
                    },
                    {
                        "name": "messages",
                        "spec": {
                            "name": "value",
                            "spec": [
                                {
                                    "name": "role",
                                    "type": "select",
                                    "label": "Role",
                                    "options": [
                                        {
                                            "label": "System",
                                            "value": "system"
                                        },
                                        {
                                            "label": "User",
                                            "value": "user"
                                        },
                                        {
                                            "label": "Assistant",
                                            "value": "assistant"
                                        }
                                    ],
                                    "required": true
                                },
                                {
                                    "name": "content",
                                    "type": "text",
                                    "label": "Message Content"
                                }
                            ],
                            "type": "collection",
                            "label": "Message"
                        },
                        "type": "array",
                        "label": "Messages",
                        "required": true
                    }
                ],
                "advanced": true
            }
        },
        {
            "id": 6,
            "module": "google-docs:createADocumentFromTemplate",
            "version": 1,
            "parameters": {},
            "mapper": {
                "from": "drive",
                "name": "Brand strategy",
                "select": "dropdown",
                "document": "/1FV7c6ABLjQnVwX261IcqAu6uJ9-kRQwc/1segMY8r8fFvCWzUJzOla3LpiOqQ1cg2crUWyvrAialQ",
                "folderId": "/1FV7c6ABLjQnVwX261IcqAu6uJ9-kRQwc",
                "requests": {
                    "brand_story": "{{22.choices[].message.content}}",
                    "brand_vision": "{{5.choices[].message.content}}",
                    "brand_mission": "{{9.choices[].message.content}}",
                    "brand_purpose": "{{17.choices[].message.content}}",
                    "brand_core_values": "{{19.choices[].message.content}}",
                    "brand_personality": "{{21.choices[].message.content}}",
                    "brand_differentiation": "{{20.choices[].message.content}}"
                },
                "destination": "drive"
            },
            "metadata": {
                "designer": {
                    "x": 2400,
                    "y": 0
                },
                "restore": {
                    "expect": {
                        "from": {
                            "label": "My Drive"
                        },
                        "select": {
                            "label": "By Dropdown"
                        },
                        "document": {
                            "path": [
                                "Growth solutions 2023",
                                "Brand Strategy Template"
                            ]
                        },
                        "folderId": {
                            "mode": "chose",
                            "path": [
                                "Growth solutions 2023"
                            ]
                        },
                        "destination": {
                            "label": "My Drive"
                        }
                    },
                    "parameters": {
                        "__IMTCONN__": {
                            "data": {
                                "scoped": "true",
                                "connection": "google"
                            },
                            "label": "My Google connection (l.govender@make.com)"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:google",
                        "label": "Connection"
                    }
                ],
                "expect": [
                    {
                        "name": "select",
                        "type": "select",
                        "label": "Create a Document from a Template",
                        "required": true,
                        "validate": {
                            "enum": [
                                "map",
                                "dropdown"
                            ]
                        }
                    },
                    {
                        "name": "name",
                        "type": "text",
                        "label": "Title",
                        "required": true
                    },
                    {
                        "name": "destination",
                        "type": "select",
                        "label": "New Drive Location",
                        "required": true,
                        "validate": {
                            "enum": [
                                "drive",
                                "share",
                                "team"
                            ]
                        }
                    },
                    {
                        "name": "from",
                        "type": "select",
                        "label": "Choose a Drive",
                        "required": true,
                        "validate": {
                            "enum": [
                                "drive",
                                "share",
                                "team"
                            ]
                        }
                    },
                    {
                        "name": "document",
                        "type": "file",
                        "label": "Document ID",
                        "required": true
                    },
                    {
                        "name": "requests",
                        "spec": [
                            {
                                "name": "brand_vision",
                                "type": "any"
                            },
                            {
                                "name": "brand_mission",
                                "type": "any"
                            },
                            {
                                "name": "brand_core_values",
                                "type": "any"
                            },
                            {
                                "name": "brand_purpose",
                                "type": "any"
                            },
                            {
                                "name": "brand_personality",
                                "type": "any"
                            },
                            {
                                "name": "brand_differentiation",
                                "type": "any"
                            },
                            {
                                "name": "brand_story",
                                "type": "any"
                            }
                        ],
                        "type": "collection",
                        "label": "Values"
                    },
                    {
                        "name": "folderId",
                        "type": "folder",
                        "label": "New Document's Location",
                        "required": true
                    }
                ]
            }
        },
        {
            "id": 30,
            "module": "google-docs:exportADocument",
            "version": 1,
            "parameters": {},
            "mapper": {
                "document": "{{6.id}}",
                "mimeType": "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                "destination": "drive"
            },
            "metadata": {
                "designer": {
                    "x": 2700,
                    "y": 0
                },
                "restore": {
                    "expect": {
                        "document": {
                            "mode": "edit",
                            "path": []
                        },
                        "mimeType": {
                            "mode": "chose",
                            "label": "Microsoft Word (.docx)"
                        },
                        "destination": {
                            "label": "My Drive"
                        }
                    },
                    "parameters": {
                        "__IMTCONN__": {
                            "data": {
                                "scoped": "true",
                                "connection": "google"
                            },
                            "label": "My Google connection (l.govender@make.com)"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "__IMTCONN__",
                        "type": "account:google",
                        "label": "Connection"
                    }
                ],
                "expect": [
                    {
                        "name": "destination",
                        "type": "select",
                        "label": "Choose a Drive",
                        "required": true,
                        "validate": {
                            "enum": [
                                "drive",
                                "share",
                                "team"
                            ]
                        }
                    },
                    {
                        "name": "mimeType",
                        "type": "select",
                        "label": "Type",
                        "required": true,
                        "validate": {
                            "enum": [
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "application/vnd.oasis.opendocument.text",
                                "application/rtf",
                                "application/pdf",
                                "text/plain",
                                "text/html",
                                "application/epub+zip"
                            ]
                        }
                    },
                    {
                        "name": "document",
                        "type": "file",
                        "label": "Document ID",
                        "required": true
                    }
                ]
            }
        },
        {
            "id": 31,
            "module": "email:ActionSendEmail",
            "version": 7,
            "parameters": {
                "saveAfterSent": false
            },
            "mapper": {
                "cc": [],
                "to": [
                    "someone@email.com"
                ],
                "bcc": [],
                "from": "",
                "html": "Hey! \n<p>\nPlease find the Brand Strategy document attached.\n<p>\nThanks!",
                "sender": "",
                "headers": [],
                "replyTo": "",
                "priority": "normal",
                "inReplyTo": "",
                "references": [],
                "attachments": [
                    {
                        "cid": "",
                        "data": "{{30.data}}",
                        "fileName": "{{30.filename}}"
                    }
                ]
            },
            "metadata": {
                "designer": {
                    "x": 3000,
                    "y": 0
                },
                "restore": {
                    "expect": {
                        "cc": {
                            "mode": "chose"
                        },
                        "to": {
                            "mode": "chose",
                            "items": [
                                null
                            ]
                        },
                        "bcc": {
                            "mode": "chose"
                        },
                        "priority": {
                            "label": "Normal"
                        },
                        "references": {
                            "mode": "chose"
                        },
                        "attachments": {
                            "mode": "chose",
                            "items": [
                                null
                            ]
                        },
                        "contentType": {
                            "label": "HTML"
                        }
                    },
                    "parameters": {
                        "account": {
                            "data": {
                                "scoped": "true",
                                "connection": "google-restricted"
                            },
                            "label": "My Google Restricted connection (l.govender@make.com)"
                        },
                        "saveAfterSent": {
                            "label": "No"
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "account",
                        "type": "account:smtp,google-restricted,microsoft-smtp-imap",
                        "label": "Connection"
                    },
                    {
                        "name": "saveAfterSent",
                        "type": "select",
                        "label": "Save message after sending",
                        "validate": {
                            "enum": [
                                true,
                                false
                            ]
                        }
                    }
                ],
                "expect": [
                    {
                        "name": "to",
                        "spec": {
                            "name": "value",
                            "type": "email",
                            "label": "Email address",
                            "required": true
                        },
                        "type": "array",
                        "label": "To",
                        "required": true
                    },
                    {
                        "name": "subject",
                        "type": "text",
                        "label": "Subject"
                    },
                    {
                        "name": "contentType",
                        "type": "select",
                        "label": "Content Type",
                        "required": true,
                        "validate": {
                            "enum": [
                                "html",
                                "text"
                            ]
                        }
                    },
                    {
                        "name": "attachments",
                        "spec": [
                            {
                                "name": "fileName",
                                "type": "filename",
                                "label": "File name",
                                "required": true,
                                "semantic": "file:name"
                            },
                            {
                                "name": "data",
                                "type": "buffer",
                                "label": "Data",
                                "required": true,
                                "semantic": "file:data"
                            },
                            {
                                "name": "cid",
                                "type": "text",
                                "label": "Content-ID"
                            }
                        ],
                        "type": "array",
                        "label": "Attachments"
                    },
                    {
                        "name": "cc",
                        "spec": {
                            "name": "value",
                            "type": "email",
                            "label": "Email address"
                        },
                        "type": "array",
                        "label": "Copy recipient"
                    },
                    {
                        "name": "bcc",
                        "spec": {
                            "name": "value",
                            "type": "email",
                            "label": "Email address"
                        },
                        "type": "array",
                        "label": "Blind copy recipient"
                    },
                    {
                        "name": "from",
                        "type": "text",
                        "label": "From"
                    },
                    {
                        "name": "sender",
                        "type": "text",
                        "label": "Sender"
                    },
                    {
                        "name": "replyTo",
                        "type": "text",
                        "label": "Reply-To"
                    },
                    {
                        "name": "inReplyTo",
                        "type": "text",
                        "label": "In-Reply-To"
                    },
                    {
                        "name": "references",
                        "spec": {
                            "name": "value",
                            "type": "text",
                            "label": "Reference",
                            "required": true
                        },
                        "type": "array",
                        "label": "References"
                    },
                    {
                        "name": "priority",
                        "type": "select",
                        "label": "Priority",
                        "validate": {
                            "enum": [
                                "high",
                                "normal",
                                "low"
                            ]
                        }
                    },
                    {
                        "name": "headers",
                        "spec": [
                            {
                                "name": "key",
                                "type": "text",
                                "label": "Key",
                                "required": true
                            },
                            {
                                "name": "value",
                                "type": "text",
                                "label": "Value",
                                "required": true
                            }
                        ],
                        "type": "array",
                        "label": "Headers"
                    },
                    {
                        "name": "html",
                        "type": "text",
                        "label": "Content"
                    }
                ]
            }
        }
    ],
    "metadata": {
        "instant": false,
        "version": 1,
        "scenario": {
            "roundtrips": 1,
            "maxErrors": 3,
            "autoCommit": true,
            "autoCommitTriggerLast": true,
            "sequential": false,
            "slots": null,
            "confidential": false,
            "dataloss": false,
            "dlq": false,
            "freshVariables": false
        },
        "designer": {
            "orphans": [],
            "notes": [
                {
                    "id": 14,
                    "text": "Please provide 3 alternate questions to the question below to avoid plagiarism but keep it simple.\n",
                    "filter": false
                },
                {
                    "id": 14,
                    "text": "Please provide the perfect length when defining a brand vision and useful general guidelines.",
                    "filter": false
                }
            ]
        },
        "zone": "eu2.make.com",
        "notes": []
    }
}